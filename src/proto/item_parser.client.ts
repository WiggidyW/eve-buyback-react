// @generated by protobuf-ts 2.9.0
// @generated from protobuf file "item_parser.proto" (package "item_parser_proto", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { ItemParser } from "./item_parser";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { ParseRep } from "./item_parser";
import type { ParseReq } from "./item_parser";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service item_parser_proto.ItemParser
 */
export interface IItemParserClient {
    /**
     * @generated from protobuf rpc: Parse(item_parser_proto.ParseReq) returns (item_parser_proto.ParseRep);
     */
    parse(input: ParseReq, options?: RpcOptions): UnaryCall<ParseReq, ParseRep>;
}
/**
 * @generated from protobuf service item_parser_proto.ItemParser
 */
export class ItemParserClient implements IItemParserClient, ServiceInfo {
    typeName = ItemParser.typeName;
    methods = ItemParser.methods;
    options = ItemParser.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: Parse(item_parser_proto.ParseReq) returns (item_parser_proto.ParseRep);
     */
    parse(input: ParseReq, options?: RpcOptions): UnaryCall<ParseReq, ParseRep> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<ParseReq, ParseRep>("unary", this._transport, method, opt, input);
    }
}
